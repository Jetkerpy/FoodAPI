# Generated by Django 4.2.3 on 2023-07-26 17:59

import backend.account.validators
import backend.restaurant.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "town_city",
                    models.CharField(
                        help_text="format: required, max-150",
                        max_length=150,
                        verbose_name="Town/City/State",
                    ),
                ),
                (
                    "address_line",
                    models.CharField(
                        help_text="format: required, max-255",
                        max_length=255,
                        verbose_name="address line 1",
                    ),
                ),
                (
                    "address_line2",
                    models.CharField(
                        blank=True,
                        help_text="format: not required, max-255",
                        max_length=255,
                        null=True,
                        verbose_name="address line 2",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="format: Y-m-d H:M:S",
                        verbose_name="date address created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="format: Y-m-d H:M:S",
                        verbose_name="date address last updated",
                    ),
                ),
            ],
            options={
                "verbose_name": "Address",
                "verbose_name_plural": "Addresses",
            },
        ),
        migrations.CreateModel(
            name="Restaurant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="format: required, max-150",
                        max_length=150,
                        unique=True,
                        verbose_name="restaurant name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        help_text="format: required, letter, numbers, underscore.",
                        max_length=100,
                        unique=True,
                        verbose_name="SAFE URL",
                    ),
                ),
                (
                    "about_us",
                    models.TextField(
                        help_text="format: required", verbose_name="about us"
                    ),
                ),
                (
                    "phone_number1",
                    models.CharField(
                        help_text="format: required",
                        max_length=13,
                        unique=True,
                        validators=[
                            backend.account.validators.validate_uzb_phone_number
                        ],
                        verbose_name="first phone number",
                    ),
                ),
                (
                    "phone_number2",
                    models.CharField(
                        blank=True,
                        help_text="format: not required",
                        max_length=13,
                        null=True,
                        unique=True,
                        validators=[
                            backend.account.validators.validate_uzb_phone_number
                        ],
                        verbose_name="second phone number",
                    ),
                ),
                (
                    "telegram_link",
                    models.CharField(
                        blank=True,
                        help_text="format: not required, max-100",
                        max_length=100,
                        null=True,
                        verbose_name="social telegram",
                    ),
                ),
                (
                    "instagram_link",
                    models.CharField(
                        blank=True,
                        help_text="format: not required, max-100",
                        max_length=100,
                        null=True,
                        verbose_name="social instagram",
                    ),
                ),
                (
                    "facebook_link",
                    models.CharField(
                        blank=True,
                        help_text="format: not required, max-100",
                        max_length=100,
                        null=True,
                        verbose_name="social facebook",
                    ),
                ),
                (
                    "domain_name",
                    models.CharField(
                        help_text="format: required, max-255",
                        max_length=255,
                        verbose_name="domain name",
                    ),
                ),
                (
                    "qr_code",
                    models.ImageField(
                        blank=True,
                        help_text="format: required, itself generated qr code for you.",
                        null=True,
                        upload_to="qr_codes",
                        verbose_name="qr code",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="format: Y-m-d H:M:S",
                        verbose_name="date restaurant created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="format: Y-m-d H:M:S",
                        verbose_name="date restaurant last updated",
                    ),
                ),
            ],
            options={
                "verbose_name": "Restaurant",
                "verbose_name_plural": "Restaurant",
            },
        ),
        migrations.CreateModel(
            name="Media",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    django_resized.forms.ResizedImageField(
                        blank=True,
                        crop=None,
                        force_format="WEBP",
                        keep_meta=True,
                        null=True,
                        quality=100,
                        scale=1.0,
                        size=[1920, 1080],
                        upload_to="restaurant_images/",
                        verbose_name="restaurant image",
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        help_text="format: required, max-150. So this is about of restaurant image",
                        max_length=150,
                        verbose_name="alternative text",
                    ),
                ),
                (
                    "is_feature",
                    models.BooleanField(
                        default=False,
                        help_text="format: default=False, true=default image",
                        verbose_name="product default image",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="format: Y-m-d H:M:S",
                        verbose_name="date restaurant image created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="format: Y-m-d H:M:S",
                        verbose_name="date restaurant image last updated",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="restaurant_images",
                        to="restaurant.restaurant",
                    ),
                ),
            ],
            options={
                "verbose_name": "restaurant image",
                "verbose_name_plural": "restaurant images",
            },
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        help_text="format: required, 0.5, 1.0 ..... 4.5, 5.0",
                        validators=[backend.restaurant.validators.validate_rating],
                        verbose_name="rating",
                    ),
                ),
                (
                    "feedback",
                    models.TextField(
                        help_text="format: required, max-1000",
                        max_length=1000,
                        verbose_name="feedback of user",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="format: Y-m-d H:M:S",
                        verbose_name="date feedback created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="format: Y-m-d H:M:S",
                        verbose_name="date feedback last updated",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_feedback",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="restaurant_feedback",
                        to="restaurant.restaurant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feedback",
                "verbose_name_plural": "Restaurant feedbacks",
            },
        ),
    ]
